// DO NOT EDIT. This file was generated by "github.com/frk/isvalid".

package testdata

import (
	"errors"
	"strings"

	"github.com/frk/isvalid"
)

func (v BaseFieldsWithRulesAndRequiredValidator) Validate() error {
	if v.F15a == nil || len(*v.F15a) == 0 {
		return errors.New("F15a is required")
	}
	if v.F15b == nil || *v.F15b == nil || len(**v.F15b) == 0 {
		return errors.New("F15b is required")
	}
	if v.F15c == nil || *v.F15c == nil || **v.F15c == nil || ***v.F15c == nil || ****v.F15c == nil || len(*****v.F15c) == 0 {
		return errors.New("F15c is required")
	}
	if v.F16a == nil || *v.F16a == nil || len(**v.F16a) == 0 {
		return errors.New("F16a is required")
	} else if !isvalid.Email(**v.F16a) {
		return errors.New("F16a must be a valid email address")
	}
	if v.F17a == nil || len(*v.F17a) == 0 {
		return errors.New("F17a is required")
	} else if !isvalid.Hex(*v.F17a) {
		return errors.New("F17a must be a valid hexadecimal string")
	} else if len(*v.F17a) < 8 || len(*v.F17a) > 128 {
		return errors.New("F17a must be of length between: 8 and 128 (inclusive)")
	}
	if v.F17b == nil || *v.F17b == nil || **v.F17b == nil || len(***v.F17b) == 0 {
		return errors.New("F17b is required")
	} else if !isvalid.Hex(***v.F17b) {
		return errors.New("F17b must be a valid hexadecimal string")
	} else if len(***v.F17b) < 8 || len(***v.F17b) > 128 {
		return errors.New("F17b must be of length between: 8 and 128 (inclusive)")
	}
	if v.F18 == nil || *v.F18 == nil || **v.F18 == nil || ***v.F18 == nil || ****v.F18 == nil || len(*****v.F18) == 0 {
		return errors.New("F18 is required")
	} else if !strings.HasPrefix(*****v.F18, "foo") {
		return errors.New("F18 must be prefixed with: \"foo\"")
	} else if !strings.Contains(*****v.F18, "bar") {
		return errors.New("F18 must contain substring: \"bar\"")
	} else if !strings.HasSuffix(*****v.F18, "baz") && !strings.HasSuffix(*****v.F18, "quux") {
		return errors.New("F18 must be suffixed with: \"baz\" or \"quux\"")
	} else if len(*****v.F18) < 8 || len(*****v.F18) > 64 {
		return errors.New("F18 must be of length between: 8 and 64 (inclusive)")
	}
	return nil
}
