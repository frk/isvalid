package analysis

import (
	"fmt"
	"testing"

	"github.com/frk/compare"
	"github.com/frk/isvalid/internal/testutil"
	"github.com/frk/tagutil"
)

var tdata = testutil.ParseTestdata("../testdata")

func testRunAnalysis(name string, t *testing.T) (*ValidatorStruct, error) {
	named, pos := testutil.FindNamedType(name, tdata)
	if named == nil {
		// Stop the test if no type with the given name was found.
		t.Fatal(name, " not found")
		return nil, nil
	}

	conf := Config{}
	conf.FieldKeySeparator = "."
	conf.ruleSpecMap = map[string]RuleSpec{
		// legit
		"utf8": RuleFunc{
			FuncName: "ValidString",
			PkgPath:  "unicode/utf8",
			ArgTypes: []Type{{Kind: TypeKindString}},
			iscustom: true,
		},

		// for testing success
		"timecheck": RuleFunc{
			FuncName: "TimeCheck", PkgPath: "path/to/rule",
			ArgTypes: []Type{{Kind: TypeKindStruct, Name: "Time", PkgPath: "time", PkgName: "time"}},
			iscustom: true,
		},
		"ifacecheck": RuleFunc{
			FuncName: "IfaceCheck", PkgPath: "path/to/rule",
			ArgTypes: []Type{{Kind: TypeKindInterface, IsEmptyInterface: true}},
			iscustom: true,
		},

		// for testing errors
		"rulefunc1": RuleFunc{
			FuncName: "RuleFunc1", PkgPath: "path/to/rule",
			ArgTypes: []Type{{Kind: TypeKindString}, {Kind: TypeKindInt}},
			iscustom: true,
		},
		"rulefunc2": RuleFunc{
			FuncName: "RuleFunc2", PkgPath: "path/to/rule",
			ArgTypes: []Type{{Kind: TypeKindString}, {Kind: TypeKindInt},
				{Kind: TypeKindSlice, Elem: &Type{Kind: TypeKindBool}}},
			IsVariadic: true, iscustom: true,
		},
	}

	vs, err := conf.Analyze(tdata.Fset, named, pos, &Info{})
	if err != nil {
		return nil, err
	}
	return vs, nil
}

func TestAnalysisRun(t *testing.T) {
	// ...
	tests := []struct {
		name     string
		want     *ValidatorStruct
		err      error
		printerr bool
	}{{
		name: "AnalysisTestBAD_ErrorHandlerFieldConflictValidator",
		err: &anError{Code: errErrorHandlerFieldConflict,
			VtorName:      "AnalysisTestBAD_ErrorHandlerFieldConflictValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "MyErrorAggregator",
			FieldType:     "mypkg.MyErrorAggregator",
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
		},
	}, {
		name: "AnalysisTestBAD_ContextOptionFieldConflictValidator",
		err: &anError{Code: errContextOptionFieldConflict,
			VtorName:      "AnalysisTestBAD_ContextOptionFieldConflictValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "context",
			FieldType:     "string",
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
		},
	}, {
		name: "AnalysisTestBAD_ContextOptionFieldTypeValidator",
		err: &anError{Code: errContextOptionFieldType,
			VtorName:      "AnalysisTestBAD_ContextOptionFieldTypeValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "Context",
			FieldType:     "int",
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
		},
	}, {
		name: "AnalysisTestBAD_EmptyValidator",
		err: &anError{Code: errEmptyValidator,
			VtorName:     "AnalysisTestBAD_EmptyValidator",
			VtorFileName: "../testdata/analysis.go",
			VtorFileLine: 123,
		},
	}, {
		name: "AnalysisTestBAD_Empty2Validator",
		err: &anError{Code: errEmptyValidator,
			VtorName:     "AnalysisTestBAD_Empty2Validator",
			VtorFileName: "../testdata/analysis.go",
			VtorFileLine: 123,
		},
	}, {
		name: "AnalysisTestBAD_Empty3Validator",
		err: &anError{Code: errEmptyValidator,
			VtorName:     "AnalysisTestBAD_Empty3Validator",
			VtorFileName: "../testdata/analysis.go",
			VtorFileLine: 123,
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumRequiredValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumRequiredValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"required:foobar"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "required",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumNotNilValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumNotNilValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]string",
			FieldTag:      tagutil.Tag{"is": {"notnil:foobar"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "notnil",
		},
	}, {
		name: "AnalysisTestBAD_TypeNilNotNilValidator",
		err: &anError{Code: errTypeNil,
			VtorName:      "AnalysisTestBAD_TypeNilNotNilValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[4]string",
			FieldTag:      tagutil.Tag{"is": {"notnil"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "notnil",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumEmailValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumEmailValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"email:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "email",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringEmailValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringEmailValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"email"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "email",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumURLValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumURLValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"url:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "url",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringURLValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringURLValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"url"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "url",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumURIValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumURIValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"uri:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uri",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringURIValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringURIValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"uri"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uri",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumPANValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumPANValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"pan:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "pan",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringPANValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringPANValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "bool",
			FieldTag:      tagutil.Tag{"is": {"pan"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "pan",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumCVVValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumCVVValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"cvv:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "cvv",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringCVVValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringCVVValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "bool",
			FieldTag:      tagutil.Tag{"is": {"cvv"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "cvv",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumSSNValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumSSNValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ssn:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ssn",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringSSNValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringSSNValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "bool",
			FieldTag:      tagutil.Tag{"is": {"ssn"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ssn",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumEINValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumEINValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ein:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ein",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringEINValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringEINValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "bool",
			FieldTag:      tagutil.Tag{"is": {"ein"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ein",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumNumericValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumNumericValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"numeric:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "numeric",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringNumericValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringNumericValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"numeric"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "numeric",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumHexValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumHexValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"hex:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "hex",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringHexValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringHexValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"hex"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "hex",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumHexcolorValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumHexcolorValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"hexcolor:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "hexcolor",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringHexcolorValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringHexcolorValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"hexcolor"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "hexcolor",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumAlphanumValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumAlphanumValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"alphanum:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "alphanum",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringAlphanumValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringAlphanumValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"alphanum"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "alphanum",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumCIDRValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumCIDRValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"cidr:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "cidr",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringCIDRValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringCIDRValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"cidr"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "cidr",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringPhoneValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringPhoneValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"phone"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "phone",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypePhoneValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypePhoneValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"phone:321"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "phone",
			RuleArg:       &RuleArg{Value: "321", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueCountryCodePhoneValidator",
		err: &anError{Code: errRuleArgValueCountryCode,
			VtorName:      "AnalysisTestBAD_RuleArgValueCountryCodePhoneValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"phone:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "phone",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindPhoneValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindPhoneValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"phone:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "phone",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringZipValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringZipValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"zip"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "zip",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeZipValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeZipValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"zip:321"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "zip",
			RuleArg:       &RuleArg{Value: "321", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueCountryCodeZipValidator",
		err: &anError{Code: errRuleArgValueCountryCode,
			VtorName:      "AnalysisTestBAD_RuleArgValueCountryCodeZipValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"zip:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "zip",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindZipValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindZipValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"zip:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "zip",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringUUIDValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringUUIDValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint16",
			FieldTag:      tagutil.Tag{"is": {"uuid"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uuid",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeUUIDValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeUUIDValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"uuid:-4"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uuid",
			RuleArg:       &RuleArg{Value: "-4", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueUUIDVerUUIDValidator",
		err: &anError{Code: errRuleArgValueUUIDVer,
			VtorName:      "AnalysisTestBAD_RuleArgValueUUIDVerUUIDValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"uuid:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uuid",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindUUIDValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindUUIDValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"uuid:&x:&y:&z"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uuid",
			RuleArg:       &RuleArg{Value: "z", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueConflictUUIDValidator",
		err: &anError{Code: errRuleArgValueConflict,
			VtorName:      "AnalysisTestBAD_RuleArgValueConflictUUIDValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"uuid:v4:5:4"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uuid",
			RuleArg:       &RuleArg{Value: "4", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumUUIDValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumUUIDValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"uuid:1:2:3:4:5:6"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "uuid",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringIPValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringIPValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint8",
			FieldTag:      tagutil.Tag{"is": {"ip"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ip",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeIPValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeIPValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ip:-4"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ip",
			RuleArg:       &RuleArg{Value: "-4", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueIPVerIPValidator",
		err: &anError{Code: errRuleArgValueIPVer,
			VtorName:      "AnalysisTestBAD_RuleArgValueIPVerIPValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ip:v7"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ip",
			RuleArg:       &RuleArg{Value: "v7", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindIPValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindIPValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ip:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ip",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueConflictIPValidator",
		err: &anError{Code: errRuleArgValueConflict,
			VtorName:      "AnalysisTestBAD_RuleArgValueConflictIPValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ip:v4:4"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ip",
			RuleArg:       &RuleArg{Value: "4", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumIPValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumIPValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"ip:v4:v6:v8"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ip",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringMACValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringMACValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint32",
			FieldTag:      tagutil.Tag{"is": {"mac"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "mac",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeMACValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeMACValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"mac:-6"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "mac",
			RuleArg:       &RuleArg{Value: "-6", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueMACVerMACValidator",
		err: &anError{Code: errRuleArgValueMACVer,
			VtorName:      "AnalysisTestBAD_RuleArgValueMACVerMACValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"mac:v10"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "mac",
			RuleArg:       &RuleArg{Value: "v10", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindMACValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindMACValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"mac:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "mac",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueConflictMACValidator",
		err: &anError{Code: errRuleArgValueConflict,
			VtorName:      "AnalysisTestBAD_RuleArgValueConflictMACValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"mac:v6:6"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "mac",
			RuleArg:       &RuleArg{Value: "6", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumMACValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumMACValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"mac:6:8:10"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "mac",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringISOValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringISOValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "complex128",
			FieldTag:      tagutil.Tag{"is": {"iso:1234"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "iso",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueISOStdISOValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgValueISOStdISOValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"iso:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "iso",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindISOValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindISOValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"iso:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "iso",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumISOValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumISOValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"iso"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "iso",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2ISOValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2ISOValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"iso:6:8"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "iso",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringRFCValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringRFCValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"rfc:1234"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rfc",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueRFCStdRFCValidator",
		err: &anError{Code: errRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgValueRFCStdRFCValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rfc:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rfc",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindRFCValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindRFCValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rfc:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rfc",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumRFCValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumRFCValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rfc"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rfc",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2RFCValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2RFCValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rfc:6:8"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rfc",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringRegexpValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringRegexpValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"re:abc"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "re",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueRegexpRegexpValidator",
		err: &anError{Code: errRuleArgValueRegexp,
			VtorName:      "AnalysisTestBAD_RuleArgValueRegexpRegexpValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"re:^($"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "re",
			RuleArg:       &RuleArg{Value: "^($", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindRegexpValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindRegexpValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"re:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "re",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumRegexpValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumRegexpValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"re"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "re",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2RegexpValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2RegexpValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {`re:foo:bar`}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "re",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringPrefixValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringPrefixValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"prefix:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "prefix",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindPrefixValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindPrefixValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"prefix:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "prefix",
			RuleArg:       &RuleArg{Value: "y", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumPrefixValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumPrefixValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"prefix"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "prefix",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringSuffixValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringSuffixValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"suffix:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "suffix",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindSuffixValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindSuffixValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"suffix:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "suffix",
			RuleArg:       &RuleArg{Value: "y", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumSuffixValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumSuffixValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"suffix"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "suffix",
		},
	}, {
		name: "AnalysisTestBAD_TypeKindStringContainsValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_TypeKindStringContainsValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"contains:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "contains",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindContainsValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindContainsValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"contains:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "contains",
			RuleArg:       &RuleArg{Value: "y", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumContainsValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumContainsValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"contains"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "contains",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumEQValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumEQValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"eq"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "eq",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeStringEQValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeStringEQValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"eq:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "eq",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintEQValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintEQValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"eq:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "eq",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeUintEQValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeUintEQValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]byte",
			FieldTag:      tagutil.Tag{"is": {"eq:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "eq",
			RuleArg:       &RuleArg{Value: "123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatEQValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatEQValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"eq:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "eq",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindEQValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindEQValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"eq:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "eq",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumNEValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumNEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"ne"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ne",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeStringNEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeStringNEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"ne:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ne",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintNEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintNEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"ne:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ne",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeUintNEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeUintNEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]byte",
			FieldTag:      tagutil.Tag{"is": {"ne:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ne",
			RuleArg:       &RuleArg{Value: "123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatNEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatNEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"ne:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ne",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindNEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindNEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"ne:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "ne",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumGTValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumGTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"gt"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gt",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2GTValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2GTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"gt:1:2"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gt",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericGTValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericGTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"gt:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gt",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintGTValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintGTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"gt:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gt",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatGTValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatGTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"gt:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gt",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindGTValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindGTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"gt:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gt",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumLTValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumLTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"lt"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lt",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2LTValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2LTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"lt:1:2"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lt",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericLTValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericLTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"lt:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lt",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintLTValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintLTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"lt:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lt",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatLTValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatLTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"lt:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lt",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindLTValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindLTValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"lt:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lt",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumGTEValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumGTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"gte"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gte",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2GTEValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2GTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"gte:1:2"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gte",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericGTEValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericGTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"gte:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gte",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintGTEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintGTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"gte:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gte",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatGTEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatGTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"gte:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gte",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindGTEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindGTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"gte:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "gte",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumLTEValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumLTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"lte"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lte",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2LTEValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2LTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"lte:1:2"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lte",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericLTEValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericLTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"lte:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lte",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintLTEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintLTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"lte:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lte",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatLTEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatLTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"lte:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lte",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindLTEValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindLTEValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"lte:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "lte",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumMinValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumMinValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"min"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "min",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2MinValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2MinValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"min:1:2"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "min",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericMinValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericMinValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"min:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "min",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintMinValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintMinValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"min:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "min",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatMinValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatMinValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"min:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "min",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindMinValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindMinValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"min:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "min",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumMaxValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumMaxValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"max"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "max",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2MaxValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2MaxValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"max:1:2"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "max",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericMaxValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericMaxValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"max:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "max",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintMaxValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintMaxValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"max:-123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "max",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatMaxValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatMaxValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"max:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "max",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindMaxValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindMaxValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"max:&x"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "max",
			RuleArg:       &RuleArg{Value: "x", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumRngValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"rng"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2RngValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2RngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"rng:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum3RngValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum3RngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"rng:1:2:3"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
		},
	}, {
		name: "AnalysisTestBAD_TypeNumericRngValidator",
		err: &anError{Code: errTypeNumeric,
			VtorName:      "AnalysisTestBAD_TypeNumericRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rng:1:23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeStringRngValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeStringRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint64",
			FieldTag:      tagutil.Tag{"is": {"rng:foo:bar"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeNintRngValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeNintRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "uint",
			FieldTag:      tagutil.Tag{"is": {"rng:-123:0"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeFloatRngValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeFloatRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"rng::1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueBoundsRngValidator",
		err: &anError{Code: errRuleArgValueBounds,
			VtorName:      "AnalysisTestBAD_RuleArgValueBoundsRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "float32",
			FieldTag:      tagutil.Tag{"is": {"rng:2:1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindRngValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindRngValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"rng:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rng",
			RuleArg:       &RuleArg{Value: "y", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNumLenValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNumLenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]string",
			FieldTag:      tagutil.Tag{"is": {"len"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgNum2LenValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleArgNum2LenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]string",
			FieldTag:      tagutil.Tag{"is": {"len:1:2:3"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
		},
	}, {
		name: "AnalysisTestBAD_TypeLengthLenValidator",
		err: &anError{Code: errTypeLength,
			VtorName:      "AnalysisTestBAD_TypeLengthLenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int32",
			FieldTag:      tagutil.Tag{"is": {"len:1:23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeLenValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeLenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]string",
			FieldTag:      tagutil.Tag{"is": {"len:foo:bar"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
			RuleArg:       &RuleArg{Value: "foo", Type: ArgTypeString},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgType2LenValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgType2LenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "map[string]struct{}",
			FieldTag:      tagutil.Tag{"is": {"len:-123:0"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
			RuleArg:       &RuleArg{Value: "-123", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgType3LenValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgType3LenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]string",
			FieldTag:      tagutil.Tag{"is": {"len::1.23"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
			RuleArg:       &RuleArg{Value: "1.23", Type: ArgTypeFloat},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgValueBoundsLenValidator",
		err: &anError{Code: errRuleArgValueBounds,
			VtorName:      "AnalysisTestBAD_RuleArgValueBoundsLenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]string",
			FieldTag:      tagutil.Tag{"is": {"len:20:10"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
			RuleArg:       &RuleArg{Value: "10", Type: ArgTypeInt},
		},
	}, {
		name: "AnalysisTestBAD_RuleArgTypeReferenceKindLenValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleArgTypeReferenceKindLenValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "[]int8",
			FieldTag:      tagutil.Tag{"is": {"len:&x:&y"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "len",
			RuleArg:       &RuleArg{Value: "y", Type: ArgTypeField},
		},
	}, {
		name: "AnalysisTestBAD_RuleFuncRuleArgCountValidator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleFuncRuleArgCountValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rulefunc1"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rulefunc1",
		},
	}, {
		name: "AnalysisTestBAD_RuleFuncRuleArgCount2Validator",
		err: &anError{Code: errRuleFuncRuleArgCount,
			VtorName:      "AnalysisTestBAD_RuleFuncRuleArgCount2Validator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rulefunc1:a:b:c"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rulefunc1",
		},
	}, {
		name: "AnalysisTestBAD_RuleFuncFieldArgTypeValidator",
		err: &anError{Code: errRuleFuncFieldArgType,
			VtorName:      "AnalysisTestBAD_RuleFuncFieldArgTypeValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "int",
			FieldTag:      tagutil.Tag{"is": {"rulefunc1:123"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rulefunc1",
		},
	}, {
		name: "AnalysisTestBAD_RuleFuncRuleArgTypeValidator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleFuncRuleArgTypeValidator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rulefunc1:foo"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rulefunc1",
			RuleArg:       &RuleArg{Type: ArgTypeString, Value: "foo"},
		},
	}, {
		name: "AnalysisTestBAD_RuleFuncRuleArgType2Validator",
		err: &anError{Code: errRuleFuncRuleArgType,
			VtorName:      "AnalysisTestBAD_RuleFuncRuleArgType2Validator",
			VtorFileName:  "../testdata/analysis.go",
			VtorFileLine:  123,
			FieldName:     "F",
			FieldType:     "string",
			FieldTag:      tagutil.Tag{"is": {"rulefunc2:123:true:false:abc"}},
			FieldFileName: "../testdata/analysis.go",
			FieldFileLine: 123,
			RuleName:      "rulefunc2",
			RuleArg:       &RuleArg{Type: ArgTypeString, Value: "abc"},
		},
	}, {
		name: "AnalysisTestOK_ErrorConstructorValidator",
		want: &ValidatorStruct{
			TypeName: "AnalysisTestOK_ErrorConstructorValidator",
			ErrorHandler: &ErrorHandlerField{
				Name: "MyErrorConstructor", IsAggregator: false,
			},
			Fields: []*StructField{{
				Name: "F", Key: "F",
				Tag:  tagutil.Tag{"is": []string{"required"}},
				Type: Type{Kind: TypeKindString}, IsExported: true,
				Rules: []*Rule{{Name: "required"}},
			}},
		},
	}, {
		name: "AnalysisTestOK_ErrorAggregatorValidator",
		want: &ValidatorStruct{
			TypeName: "AnalysisTestOK_ErrorAggregatorValidator",
			ErrorHandler: &ErrorHandlerField{
				Name: "erragg", IsAggregator: true,
			},
			Fields: []*StructField{{
				Name: "F", Key: "F",
				Tag:  tagutil.Tag{"is": []string{"required"}},
				Type: Type{Kind: TypeKindString}, IsExported: true,
				Rules: []*Rule{{Name: "required"}},
			}},
		},
	}, {
		name: "AnalysisTestOK_ContextValidator",
		want: &ValidatorStruct{
			TypeName: "AnalysisTestOK_ContextValidator",
			ContextOption: &ContextOptionField{
				Name: "context",
			},
			Fields: []*StructField{{
				Name: "F", Key: "F",
				Tag:  tagutil.Tag{"is": []string{"required"}},
				Type: Type{Kind: TypeKindString}, IsExported: true,
				Rules: []*Rule{{Name: "required"}},
			}},
		},
	}, {
		name: "AnalysisTestOK_Context2Validator",
		want: &ValidatorStruct{
			TypeName: "AnalysisTestOK_Context2Validator",
			ContextOption: &ContextOptionField{
				Name: "Context",
			},
			Fields: []*StructField{{
				Name: "F", Key: "F",
				Tag:  tagutil.Tag{"is": []string{"required"}},
				Type: Type{Kind: TypeKindString}, IsExported: true,
				Rules: []*Rule{{Name: "required"}},
			}},
		},
	}, {
		name:     "AnalysisTestOK_Validator",
		printerr: true,
		want: &ValidatorStruct{
			TypeName: "AnalysisTestOK_Validator",
			ContextOption: &ContextOptionField{
				Name: "Context",
			},
			BeforeValidate: &MethodInfo{Name: "beforevalidate"},
			AfterValidate:  &MethodInfo{Name: "AfterValidate"},
			Fields: []*StructField{{
				Name: "UserInput",
				Tag:  tagutil.Tag{"isvalid": []string{"omitkey"}},
				Type: Type{
					Kind: TypeKindPtr,
					Elem: &Type{
						Name:       "UserInput",
						Kind:       TypeKindStruct,
						PkgPath:    "path/to/test",
						PkgName:    "testdata",
						PkgLocal:   "testdata",
						IsExported: true,
						Fields: []*StructField{{
							Name: "CountryCode", Key: "CountryCode",
							Type: Type{Kind: TypeKindString}, IsExported: true,
						}, {
							Name: "SomeVersion", Key: "SomeVersion",
							Type: Type{Kind: TypeKindInt}, IsExported: true,
						}, {
							Name: "SomeValue", Key: "SomeValue",
							Type: Type{Kind: TypeKindString}, IsExported: true,
						}, {
							Name: "f1", Key: "f1",
							Tag:  tagutil.Tag{"is": []string{"required"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "required"}},
						}, {
							Name: "f2", Key: "f2",
							Tag:  tagutil.Tag{"is": []string{"required:@create"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "required", Context: "create"}},
						}, {
							Name: "f3", Key: "f3",
							Tag:  tagutil.Tag{"is": []string{"required:#key"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "required", SetKey: "key"}},
						}, {
							Name: "f4", Key: "f4",
							Tag:  tagutil.Tag{"is": []string{"required:@create:#key"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "required", Context: "create", SetKey: "key"}},
						}, {
							Name: "f5", Key: "f5",
							Tag:  tagutil.Tag{"is": []string{"email"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "email"}},
						}, {
							Name: "f6", Key: "f6",
							Tag:  tagutil.Tag{"is": []string{"url"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "url"}},
						}, {
							Name: "f7", Key: "f7",
							Tag:  tagutil.Tag{"is": []string{"uri"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "uri"}},
						}, {
							Name: "f8", Key: "f8",
							Tag:  tagutil.Tag{"is": []string{"pan"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "pan"}},
						}, {
							Name: "f9", Key: "f9",
							Tag:  tagutil.Tag{"is": []string{"cvv"}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "cvv"}},
						}, {
							Name: "F10", Key: "F10",
							Tag:  tagutil.Tag{"is": []string{"ssn"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "ssn"}},
						}, {
							Name: "F11", Key: "F11",
							Tag:  tagutil.Tag{"is": []string{"ein"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "ein"}},
						}, {
							Name: "F12", Key: "F12",
							Tag:  tagutil.Tag{"is": []string{"numeric"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "numeric"}},
						}, {
							Name: "F13", Key: "F13",
							Tag:  tagutil.Tag{"is": []string{"hex"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "hex"}},
						}, {
							Name: "F14", Key: "F14",
							Tag:  tagutil.Tag{"is": []string{"hexcolor"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "hexcolor"}},
						}, {
							Name: "F15", Key: "F15",
							Tag:  tagutil.Tag{"is": []string{"alphanum"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "alphanum"}},
						}, {
							Name: "F16", Key: "F16",
							Tag:  tagutil.Tag{"is": []string{"cidr"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "cidr"}},
						}, {
							Name: "F17", Key: "F17",
							Tag:  tagutil.Tag{"is": []string{"phone"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "phone"}},
						}, {
							Name: "F18", Key: "F18",
							Tag:  tagutil.Tag{"is": []string{"phone:us:ca"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "phone", Args: []*RuleArg{
								{Value: "us", Type: ArgTypeString},
								{Value: "ca", Type: ArgTypeString},
							}}},
						}, {
							Name: "F19", Key: "F19",
							Tag:  tagutil.Tag{"is": []string{"phone:&CountryCode"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "phone", Args: []*RuleArg{
								{Value: "CountryCode", Type: ArgTypeField},
							}}},
						}, {
							Name: "F20", Key: "F20",
							Tag:  tagutil.Tag{"is": []string{"zip"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "zip"}},
						}, {
							Name: "F21", Key: "F21",
							Tag:  tagutil.Tag{"is": []string{"zip:deu:fin"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "zip", Args: []*RuleArg{
								{Value: "deu", Type: ArgTypeString},
								{Value: "fin", Type: ArgTypeString},
							}}},
						}, {
							Name: "F22", Key: "F22",
							Tag:  tagutil.Tag{"is": []string{"zip:&CountryCode"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "zip", Args: []*RuleArg{
								{Value: "CountryCode", Type: ArgTypeField},
							}}},
						}, {
							Name: "F23", Key: "F23",
							Tag:  tagutil.Tag{"is": []string{"uuid"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "uuid"}},
						}, {
							Name: "F24", Key: "F24",
							Tag:  tagutil.Tag{"is": []string{"uuid:3"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "uuid", Args: []*RuleArg{
								{Value: "3", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F25", Key: "F25",
							Tag:  tagutil.Tag{"is": []string{"uuid:v4"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "uuid", Args: []*RuleArg{
								{Value: "4", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F26", Key: "F26",
							Tag:  tagutil.Tag{"is": []string{"uuid:&SomeVersion"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "uuid", Args: []*RuleArg{
								{Value: "SomeVersion", Type: ArgTypeField},
							}}},
						}, {
							Name: "F27", Key: "F27",
							Tag:  tagutil.Tag{"is": []string{"ip"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "ip"}},
						}, {
							Name: "F28", Key: "F28",
							Tag:  tagutil.Tag{"is": []string{"ip:4"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "ip", Args: []*RuleArg{
								{Value: "4", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F29", Key: "F29",
							Tag:  tagutil.Tag{"is": []string{"ip:v6"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "ip", Args: []*RuleArg{
								{Value: "6", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F30", Key: "F30",
							Tag:  tagutil.Tag{"is": []string{"ip:&SomeVersion"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "ip", Args: []*RuleArg{
								{Value: "SomeVersion", Type: ArgTypeField},
							}}},
						}, {
							Name: "F31", Key: "F31",
							Tag:  tagutil.Tag{"is": []string{"mac"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "mac"}},
						}, {
							Name: "F32", Key: "F32",
							Tag:  tagutil.Tag{"is": []string{"mac:6"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "mac", Args: []*RuleArg{
								{Value: "6", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F33", Key: "F33",
							Tag:  tagutil.Tag{"is": []string{"mac:v8"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "mac", Args: []*RuleArg{
								{Value: "8", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F34", Key: "F34",
							Tag:  tagutil.Tag{"is": []string{"mac:&SomeVersion"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "mac", Args: []*RuleArg{
								{Value: "SomeVersion", Type: ArgTypeField},
							}}},
						}, {
							Name: "F35", Key: "F35",
							Tag:  tagutil.Tag{"is": []string{"iso:1234"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "iso", Args: []*RuleArg{
								{Value: "1234", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F36", Key: "F36",
							Tag:  tagutil.Tag{"is": []string{"rfc:1234"}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "rfc", Args: []*RuleArg{
								{Value: "1234", Type: ArgTypeInt},
							}}},
						}, {
							Name: "F37", Key: "F37",
							Tag:  tagutil.Tag{"is": []string{`re:"^[a-z]+\[[0-9]+\]$"`}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "re", Args: []*RuleArg{
								{Value: `^[a-z]+\[[0-9]+\]$`, Type: ArgTypeString},
							}}},
						}, {
							Name: "F38", Key: "F38",
							Tag:  tagutil.Tag{"is": []string{`re:"\w+"`}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "re", Args: []*RuleArg{
								{Value: `\w+`, Type: ArgTypeString},
							}}},
						}, {
							Name: "F39", Key: "F39",
							Tag:  tagutil.Tag{"is": []string{`contains:foo bar`}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "contains", Args: []*RuleArg{
								{Value: "foo bar", Type: ArgTypeString},
							}}},
						}, {
							Name: "F40", Key: "F40",
							Tag:  tagutil.Tag{"is": []string{`contains:&SomeValue`}},
							Type: Type{Kind: TypeKindString}, IsExported: true,
							Rules: []*Rule{{Name: "contains", Args: []*RuleArg{
								{Value: "SomeValue", Type: ArgTypeField},
							}}},
						}, {
							Name: "f41", Key: "f41",
							Tag:  tagutil.Tag{"is": []string{`prefix:foo bar`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "prefix", Args: []*RuleArg{
								{Value: "foo bar", Type: ArgTypeString},
							}}},
						}, {
							Name: "f42", Key: "f42",
							Tag:  tagutil.Tag{"is": []string{`prefix:&SomeValue`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "prefix", Args: []*RuleArg{
								{Value: "SomeValue", Type: ArgTypeField},
							}}},
						}, {
							Name: "f43", Key: "f43",
							Tag:  tagutil.Tag{"is": []string{`suffix:foo bar`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "suffix", Args: []*RuleArg{
								{Value: "foo bar", Type: ArgTypeString},
							}}},
						}, {
							Name: "f44", Key: "f44",
							Tag:  tagutil.Tag{"is": []string{`suffix:&SomeValue`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "suffix", Args: []*RuleArg{
								{Value: "SomeValue", Type: ArgTypeField},
							}}},
						}, {
							Name: "f45", Key: "f45",
							Tag:  tagutil.Tag{"is": []string{`eq:foo bar`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "eq", Args: []*RuleArg{
								{Value: "foo bar", Type: ArgTypeString},
							}}},
						}, {
							Name: "f46", Key: "f46",
							Tag:  tagutil.Tag{"is": []string{`eq:-123`}},
							Type: Type{Kind: TypeKindInt}, IsExported: false,
							Rules: []*Rule{{Name: "eq", Args: []*RuleArg{
								{Value: "-123", Type: ArgTypeInt},
							}}},
						}, {
							Name: "f47", Key: "f47",
							Tag:  tagutil.Tag{"is": []string{`eq:123.987`}},
							Type: Type{Kind: TypeKindFloat64}, IsExported: false,
							Rules: []*Rule{{Name: "eq", Args: []*RuleArg{
								{Value: "123.987", Type: ArgTypeFloat},
							}}},
						}, {
							Name: "f48", Key: "f48",
							Tag:  tagutil.Tag{"is": []string{`eq:&SomeValue`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "eq", Args: []*RuleArg{
								{Value: "SomeValue", Type: ArgTypeField},
							}}},
						}, {
							Name: "f49", Key: "f49",
							Tag:  tagutil.Tag{"is": []string{`ne:foo bar`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "ne", Args: []*RuleArg{
								{Value: "foo bar", Type: ArgTypeString},
							}}},
						}, {
							Name: "f50", Key: "f50",
							Tag:  tagutil.Tag{"is": []string{`ne:-123`}},
							Type: Type{Kind: TypeKindInt}, IsExported: false,
							Rules: []*Rule{{Name: "ne", Args: []*RuleArg{
								{Value: "-123", Type: ArgTypeInt},
							}}},
						}, {
							Name: "f51", Key: "f51",
							Tag:  tagutil.Tag{"is": []string{`ne:123.987`}},
							Type: Type{Kind: TypeKindFloat64}, IsExported: false,
							Rules: []*Rule{{Name: "ne", Args: []*RuleArg{
								{Value: "123.987", Type: ArgTypeFloat},
							}}},
						}, {
							Name: "f52", Key: "f52",
							Tag:  tagutil.Tag{"is": []string{`ne:&SomeValue`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "ne", Args: []*RuleArg{
								{Value: "SomeValue", Type: ArgTypeField}}}},
						}, {
							Name: "f53", Key: "f53",
							Tag:  tagutil.Tag{"is": []string{`gt:24`, `lt:128`}},
							Type: Type{Kind: TypeKindUint8}, IsExported: false,
							Rules: []*Rule{
								{Name: "gt", Args: []*RuleArg{
									{Value: "24", Type: ArgTypeInt}}},
								{Name: "lt", Args: []*RuleArg{
									{Value: "128", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f54", Key: "f54",
							Tag:  tagutil.Tag{"is": []string{`gt:-128`, `lt:-24`}},
							Type: Type{Kind: TypeKindInt16}, IsExported: false,
							Rules: []*Rule{
								{Name: "gt", Args: []*RuleArg{
									{Value: "-128", Type: ArgTypeInt}}},
								{Name: "lt", Args: []*RuleArg{
									{Value: "-24", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f55", Key: "f55",
							Tag:  tagutil.Tag{"is": []string{`gt:0.24`, `lt:1.28`}},
							Type: Type{Kind: TypeKindFloat32}, IsExported: false,
							Rules: []*Rule{
								{Name: "gt", Args: []*RuleArg{
									{Value: "0.24", Type: ArgTypeFloat}}},
								{Name: "lt", Args: []*RuleArg{
									{Value: "1.28", Type: ArgTypeFloat}}},
							},
						}, {
							Name: "f56", Key: "f56",
							Tag:  tagutil.Tag{"is": []string{`gte:24`, `lte:128`}},
							Type: Type{Kind: TypeKindUint8}, IsExported: false,
							Rules: []*Rule{
								{Name: "gte", Args: []*RuleArg{
									{Value: "24", Type: ArgTypeInt}}},
								{Name: "lte", Args: []*RuleArg{
									{Value: "128", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f57", Key: "f57",
							Tag:  tagutil.Tag{"is": []string{`gte:-128`, `lte:-24`}},
							Type: Type{Kind: TypeKindInt16}, IsExported: false,
							Rules: []*Rule{
								{Name: "gte", Args: []*RuleArg{
									{Value: "-128", Type: ArgTypeInt}}},
								{Name: "lte", Args: []*RuleArg{
									{Value: "-24", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f58", Key: "f58",
							Tag:  tagutil.Tag{"is": []string{`gte:0.24`, `lte:1.28`}},
							Type: Type{Kind: TypeKindFloat32}, IsExported: false,
							Rules: []*Rule{
								{Name: "gte", Args: []*RuleArg{
									{Value: "0.24", Type: ArgTypeFloat}}},
								{Name: "lte", Args: []*RuleArg{
									{Value: "1.28", Type: ArgTypeFloat}}},
							},
						}, {
							Name: "f59", Key: "f59",
							Tag:  tagutil.Tag{"is": []string{`min:24`, `max:128`}},
							Type: Type{Kind: TypeKindUint8}, IsExported: false,
							Rules: []*Rule{
								{Name: "min", Args: []*RuleArg{
									{Value: "24", Type: ArgTypeInt}}},
								{Name: "max", Args: []*RuleArg{
									{Value: "128", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f60", Key: "f60",
							Tag:  tagutil.Tag{"is": []string{`min:-128`, `max:-24`}},
							Type: Type{Kind: TypeKindInt16}, IsExported: false,
							Rules: []*Rule{
								{Name: "min", Args: []*RuleArg{
									{Value: "-128", Type: ArgTypeInt}}},
								{Name: "max", Args: []*RuleArg{
									{Value: "-24", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f61", Key: "f61",
							Tag:  tagutil.Tag{"is": []string{`min:0.24`, `max:1.28`}},
							Type: Type{Kind: TypeKindFloat32}, IsExported: false,
							Rules: []*Rule{
								{Name: "min", Args: []*RuleArg{
									{Value: "0.24", Type: ArgTypeFloat}}},
								{Name: "max", Args: []*RuleArg{
									{Value: "1.28", Type: ArgTypeFloat}}},
							},
						}, {
							Name: "f62", Key: "f62",
							Tag:  tagutil.Tag{"is": []string{`rng:24:128`}},
							Type: Type{Kind: TypeKindUint8}, IsExported: false,
							Rules: []*Rule{{Name: "rng", Args: []*RuleArg{
								{Value: "24", Type: ArgTypeInt},
								{Value: "128", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f63", Key: "f63",
							Tag:  tagutil.Tag{"is": []string{`rng:-128:-24`}},
							Type: Type{Kind: TypeKindInt16}, IsExported: false,
							Rules: []*Rule{{Name: "rng", Args: []*RuleArg{
								{Value: "-128", Type: ArgTypeInt},
								{Value: "-24", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f64", Key: "f64",
							Tag:  tagutil.Tag{"is": []string{`rng:0.24:1.28`}},
							Type: Type{Kind: TypeKindFloat32}, IsExported: false,
							Rules: []*Rule{{Name: "rng", Args: []*RuleArg{
								{Value: "0.24", Type: ArgTypeFloat},
								{Value: "1.28", Type: ArgTypeFloat}}},
							},
						}, {
							Name: "f65", Key: "f65",
							Tag:  tagutil.Tag{"is": []string{`len:28`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f66", Key: "f66",
							Tag:  tagutil.Tag{"is": []string{`len:28`}},
							Type: Type{Kind: TypeKindSlice, Elem: &Type{Kind: TypeKindInt}}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f67", Key: "f67",
							Tag:  tagutil.Tag{"is": []string{`len:28`}},
							Type: Type{Kind: TypeKindMap, Key: &Type{Kind: TypeKindString}, Elem: &Type{Kind: TypeKindInt}}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f68", Key: "f68",
							Tag:  tagutil.Tag{"is": []string{`len:4:28`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "4", Type: ArgTypeInt},
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f69", Key: "f69",
							Tag:  tagutil.Tag{"is": []string{`len:4:28`}},
							Type: Type{Kind: TypeKindSlice, Elem: &Type{Kind: TypeKindInt}}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "4", Type: ArgTypeInt},
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f70", Key: "f70",
							Tag:  tagutil.Tag{"is": []string{`len:4:28`}},
							Type: Type{Kind: TypeKindMap, Key: &Type{Kind: TypeKindString}, Elem: &Type{Kind: TypeKindInt}}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "4", Type: ArgTypeInt},
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f71", Key: "f71",
							Tag:  tagutil.Tag{"is": []string{`len::28`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "", Type: ArgTypeUnknown},
								{Value: "28", Type: ArgTypeInt}}},
							},
						}, {
							Name: "f72", Key: "f72",
							Tag:  tagutil.Tag{"is": []string{`len:4:`}},
							Type: Type{Kind: TypeKindSlice, Elem: &Type{Kind: TypeKindInt}}, IsExported: false,
							Rules: []*Rule{{Name: "len", Args: []*RuleArg{
								{Value: "4", Type: ArgTypeInt},
								{Value: "", Type: ArgTypeUnknown}}},
							},
						}, {
							Name: "g1", Key: "g1",
							IsExported: false,
							Type: Type{Kind: TypeKindStruct,
								Fields: []*StructField{{
									Name: "f1", Key: "g1.f1",
									Tag:  tagutil.Tag{"is": []string{`required`}},
									Type: Type{Kind: TypeKindString}, IsExported: false,
									Rules: []*Rule{{Name: "required"}},
								}},
							},
						}, {
							Name: "f73", Key: "f73",
							Tag:  tagutil.Tag{"is": []string{`utf8`}},
							Type: Type{Kind: TypeKindString}, IsExported: false,
							Rules: []*Rule{{Name: "utf8"}},
						}, {
							Name: "f74", Key: "f74",
							Type: Type{
								Kind:       TypeKindStruct,
								Name:       "Time",
								PkgPath:    "time",
								PkgName:    "time",
								PkgLocal:   "time",
								IsImported: true,
								IsExported: true,
							},
							IsExported: false,
							Tag:        tagutil.Tag{"is": []string{`timecheck`, `ifacecheck`}},
							Rules: []*Rule{
								{Name: "timecheck"},
								{Name: "ifacecheck"},
							},
						}, {
							Name: "f75", Key: "f75",
							Type: Type{
								Kind:        TypeKindString,
								Name:        "MyString",
								PkgPath:     "github.com/frk/isvalid/internal/testdata/mypkg",
								PkgName:     "mypkg",
								PkgLocal:    "mypkg",
								IsImported:  true,
								IsExported:  true,
								IsIsValider: true,
							},
							Tag:   tagutil.Tag{"is": []string{`required`}},
							Rules: []*Rule{{Name: "required"}, {Name: "isvalid"}},
						}, {
							Name: "f76", Key: "f76",
							Type: Type{
								Kind:        TypeKindInt,
								Name:        "MyInt",
								PkgPath:     "github.com/frk/isvalid/internal/testdata/mypkg",
								PkgName:     "mypkg",
								PkgLocal:    "mypkg",
								IsImported:  true,
								IsExported:  true,
								IsIsValider: true,
							},
							Tag:   tagutil.Tag{"is": []string{`required`}},
							Rules: []*Rule{{Name: "required"}, {Name: "isvalid"}},
						}, {
							Name: "f77", Key: "f77",
							Type: Type{
								Kind: TypeKindPtr,
								Elem: &Type{
									Kind:        TypeKindString,
									Name:        "MyString",
									PkgPath:     "github.com/frk/isvalid/internal/testdata/mypkg",
									PkgName:     "mypkg",
									PkgLocal:    "mypkg",
									IsImported:  true,
									IsExported:  true,
									IsIsValider: true,
								},
							},
							Tag:   tagutil.Tag{"is": []string{`-isvalid`}},
							Rules: nil,
						}, {
							Name: "f78", Key: "f78",
							Type: Type{
								Kind: TypeKindPtr,
								Elem: &Type{
									Kind: TypeKindPtr,
									Elem: &Type{
										Kind:        TypeKindInt,
										Name:        "MyInt",
										PkgPath:     "github.com/frk/isvalid/internal/testdata/mypkg",
										PkgName:     "mypkg",
										PkgLocal:    "mypkg",
										IsImported:  true,
										IsExported:  true,
										IsIsValider: true,
									},
								},
							},
							Tag:   tagutil.Tag{"is": []string{``}},
							Rules: []*Rule{{Name: "isvalid"}},
						}, {
							Name: "f79", Key: "f79",
							Type: Type{
								Kind: TypeKindPtr,
								Elem: &Type{
									Kind:        TypeKindInterface,
									IsIsValider: true,
								},
							},
							Tag:   nil,
							Rules: []*Rule{{Name: "isvalid"}},
						}},
					},
				},
				IsExported: true,
			}},
		},
	}}

	compare := compare.Config{ObserveFieldTag: "cmp"}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := testRunAnalysis(tt.name, t)
			if e := compare.Compare(err, tt.err); e != nil {
				t.Errorf("Error: %v", e)
			}
			if e := compare.Compare(got, tt.want); e != nil {
				t.Error(e)
			}

			if tt.printerr && err != nil {
				fmt.Println(err)
			}
		})
	}
}
